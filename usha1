## autoscaling group 

provider "aws" {
    region  = "us-east-1"
}
resource "aws_launch_template" "foobar" {
  name_prefix   = "foobar"
  image_id      = "ami-08f3d892de259504d"
  instance_type = "t2.micro"
}

resource "aws_autoscaling_group" "bar" {
  availability_zones = ["us-east-1a"]
  desired_capacity   = 1
  max_size           = 1
  min_size           = 1

  launch_template {
    id      = aws_launch_template.foobar.id
    version = "$Latest"
  }
}
















// Your First terraform code to get amazon linux AMI dynamically

# Configure the AWS Provider
provider "aws" {
  region  = "us-west-2"
}
#to get the ami id for the given region
data "aws_ami" "amazon-linux-2" {
  most_recent = true

 filter {
   name   = "name"
   values = ["amzn2-ami-hvm*"]
 }
  
  filter {
    name   = "root-device-type"
    values = ["ebs"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }

  owners = ["amazon"]

}

##
resource "aws_instance" "webTest1" {
  ami           = data.aws_ami.amazon-linux-2.id
  instance_type = "t2.micro"

  tags = {
    Name = "HelloWorld"
  }
}
